{
    "compilerOptions": {
        "target": "ES2020",
        "module": "ESNext",
        "noEmit": true,
        "outDir": "dist",
        "paths": {
            "@/*": ["./src-client/*"]
        },
        "lib": ["ES2020", "DOM", "DOM.Iterable", "ESNext"],
        "types": ["vite/client"],
        "skipLibCheck": true,
        "moduleResolution": "bundler",
        "allowImportingTsExtensions": true,
        "isolatedModules": true,
        "moduleDetection": "force",
        "jsx": "react-jsx",

        "strict": true,                             /* Enable all strict type-checking options. */
        "noUnusedLocals": false,
        "noUnusedParameters": false,
        "useDefineForClassFields": true,
        "importsNotUsedAsValues": "remove",
        "noPropertyAccessFromIndexSignature": false,
        "noImplicitAny": true,                      /* Enable error reporting for expressions and declarations with an implied 'any' type. */
        "strictNullChecks": true,                   /* When type checking, take into account 'null' and 'undefined'. */
        "strictFunctionTypes": true,                /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
        "strictBindCallApply": true,                /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
        "strictPropertyInitialization": false,      /* Check for class properties that are declared but not set in the constructor. */
        "noImplicitThis": true,                     /* Enable error reporting when 'this' is given the type 'any'. */
        "useUnknownInCatchVariables": true,         /* Default catch clause variables as 'unknown' instead of 'any'. */
        "alwaysStrict": true,                       /* Ensure 'use strict' is always emitted. */
        "exactOptionalPropertyTypes": false,        /* Interpret optional property types as written, rather than adding 'undefined'. */
        "noImplicitReturns": true,                  /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true,         /* Enable error reporting for fallthrough cases in switch statements. */
        "noUncheckedIndexedAccess": true,           /* Add 'undefined' to a type when accessed using an index. */
        "noImplicitOverride": true,                 /* Ensure overriding members in derived classes are marked with an override modifier. */
    },
    "include": [
        "src-client/**/*"
    ]
}
